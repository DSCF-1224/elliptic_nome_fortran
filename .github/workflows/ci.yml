name: CI

on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:

  fypp:

    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:

      - uses: actions/checkout@v5

      - uses: actions/setup-python@v6
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Install Python dependencies (fypp only)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run fypp
        run: |
          cd src
          chmod +x ./run_fypp.sh
          ./run_fypp.sh
          cd ../test
          chmod +x ./run_fypp.sh
          ./run_fypp.sh
          cd ..

      - name: Upload artifacts (src)
        uses: actions/upload-artifact@v4
        with:
          name: src-f90
          path: src/*.f90
          retention-days: 1

      - name: Upload artifacts (test)
        uses: actions/upload-artifact@v4
        with:
          name: test-f90
          path: test/*.f90
          retention-days: 1

      - name: Commit and push generated Fortran code
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git checkout -B generated
          git add src/*.f90 test/*.f90
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update generated Fortran code"
            git push origin generated --force
          fi

  test:

    needs: fypp

    runs-on: ubuntu-latest

    strategy:
      matrix:
        profile: [debug, release]

    steps:

      - uses: actions/checkout@v5

      - name: Get .f90 files generated by fypp (src)
        uses: actions/download-artifact@v4
        with:
          name: src-f90
          path: src

      - name: Get .f90 files generated by fypp (test)
        uses: actions/download-artifact@v4
        with:
          name: test-f90
          path: test

      - name: Check the .f90 files generated by fypp
        run: |
          echo [src]
          cd src
          ls -a
          cd ../test
          echo [test]
          ls -a
          cd ..

      - name: Install fpm
        uses: fortran-lang/setup-fpm@v8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build library using fpm
        run: fpm build --profile ${{ matrix.profile }}

      - name: Test library using fpm (${{ matrix.profile }} mode)
        run: fpm test --profile ${{ matrix.profile }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: check-${{ matrix.profile }}
          path: check*.md
          retention-days: 1

  ford:

    needs: test

    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:

      - uses: actions/checkout@v5

      - uses: actions/setup-python@v6
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Verify FORD installation
        run: ford --version

      - uses: ts-graphviz/setup-graphviz@v2

      - name: Verify Graphviz installation
        run: dot -V

      - name: Download .f90 files generated by fypp (src)
        uses: actions/download-artifact@v4
        with:
          name: src-f90
          path: src

      - name: Generate the documentation
        run: ford ford.md

      - name: Download result of tests (debug mode)
        uses: actions/download-artifact@v4
        with:
          name: check-debug
          path: doc/check/debug

      - name: Download result of tests (release mode)
        uses: actions/download-artifact@v4
        with:
          name: check-release
          path: doc/check/release

      - name: Upload documentation files as artifact
        id: upload-pages
        uses: actions/upload-pages-artifact@v4
        with:
          path: doc

  deploy-documentation:

    if: github.ref == 'refs/heads/main'

    needs: ford

    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deploy-pages.outputs.page_url }}

    steps:

      - name: Deploy to GitHub Pages
        id: deploy-pages
        uses: actions/deploy-pages@v4
